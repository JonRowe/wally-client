#!/usr/bin/env ruby
$:.unshift(File.dirname(__FILE__) + '/../lib') unless $:.include?(File.dirname(__FILE__) + '/../lib')

if File.exist?('.wally')
  @code = '?authentication_code=' + File.read(".wally").strip
else
  @code = ''
end

if ARGV.first == "push"
  require "restclient"
  require "json"
  require "wally/parses_features"
  features = []
  ARGV[2..-1].each do |arg|
    Dir.glob(File.join("#{arg}", "**/*.feature")).each do |feature_path|
      begin
        gherkin = Wally::ParsesFeatures.new.parse(File.read(feature_path))
      rescue
        puts "Couldn't parse '#{feature_path}'"
        puts "Contents:"
        puts File.read(feature_path)
      end
      features << {:path => feature_path, :gherkin => gherkin}
    end
  end
  RestClient.put "#{ARGV[1]}/features/#{@code}", features.to_json, {:content_type => :json, :accept => :json}
elsif ARGV[0] == "destroy"
  require "restclient"
  RestClient.delete "#{ARGV[1]}#{@code}"
else
  puts "Usage:"
  puts "  wally push <url>/projects/<project-name> <features-dir>"
  puts "  wally destroy <url>/projects/<project-name>"
end
